/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author mario_000
 */
import java.awt.Image;
import static javax.swing.JOptionPane.*;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import java.awt.datatransfer.*;
import java.awt.Toolkit;

public class VentanaCURP extends javax.swing.JFrame {

    /**
     * Creates new form VentanaCURP
     */
    public VentanaCURP() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        PanelTitulo = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        PanelPrincipal = new javax.swing.JPanel();
        txtNombres = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtApellidoP = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        txtApellidoM = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        cBoxE = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        cBoxD = new javax.swing.JComboBox();
        cBoxM = new javax.swing.JComboBox();
        cBoxA = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        cBoxS = new javax.swing.JComboBox();
        jPanel3 = new javax.swing.JPanel();
        botGenerar = new javax.swing.JButton();
        botImprimir = new javax.swing.JButton();
        botSalir = new javax.swing.JButton();
        btGuardar = new javax.swing.JButton();
        btLeer = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        txtCURPGen = new javax.swing.JTextField();
        Menu1 = new javax.swing.JMenuBar();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();
        MenuLimpiar = new javax.swing.JMenuItem();
        Tabla = new javax.swing.JMenuItem();
        jMenuItem1 = new javax.swing.JMenuItem();
        MenuEditar = new javax.swing.JMenu();
        menuCopiarTexti = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem3 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Ventana CURP");
        setIconImage(getIconImage());
        setResizable(false);

        PanelTitulo.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Generador de CURP");

        javax.swing.GroupLayout PanelTituloLayout = new javax.swing.GroupLayout(PanelTitulo);
        PanelTitulo.setLayout(PanelTituloLayout);
        PanelTituloLayout.setHorizontalGroup(
            PanelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 589, Short.MAX_VALUE)
        );
        PanelTituloLayout.setVerticalGroup(
            PanelTituloLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 28, Short.MAX_VALUE)
        );

        PanelPrincipal.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        jLabel2.setText("Nombre:");

        jLabel3.setText("Apellido Paterno");

        jLabel4.setText("Apellido Materno");

        jLabel5.setText("Estado de Nacimiento");

        cBoxE.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione Estado", "Aguascalientes", "Baja California", "Baja California Sur", "Campeche", "Chiapas", "Chihuahua", "Coahuila", "Colima", "Distrito Federal", "Durango", "Estado de México", "Guanajuato", "Guerrero", "Hidalgo", "Jalisco", "Michoacán", "Morelos", "Nayarit", "Nuevo León", "Oaxaca", "Puebla", "Querétaro", "Quintana Roo", "San Luis Potosí", "Sinaloa", "Sonora", "Tabasco", "Tamaulipas", "Tlaxcala", "Veracruz", "Yucatán", "Zacatecas" }));

        jLabel6.setText("Fecha de Nacimiento");

        jLabel7.setText("Dia");

        jLabel8.setText("Mes");

        jLabel9.setText("Año");

        cBoxD.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Dia" }));

        cBoxM.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Mes", "Enero ", "Febrero", "Marzo", "Abril", "Mayo", "Junio", "Julio", "Agosto", "Septiembre", "Octubre", "Noviembre", "Diciembre" }));
        cBoxM.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cBoxMActionPerformed(evt);
            }
        });

        cBoxA.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Año", "1990", "1991", "1992", "1993", "1994", "1995", "1996", "1997", "1998", "1999", "2000", "2001", "2002", "2003", "2004", "2005", "2006", "2007", "2008", "2009", "2010", "2011", "2012", "2013", "2014" }));

        jLabel10.setText("Sexo");

        cBoxS.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Seleccione Sexo", "Hombre ♂ ", "Mujer ♀" }));

        jPanel3.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        botGenerar.setText("Generar");
        botGenerar.setToolTipText("Aqui Generas La CURP");
        botGenerar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botGenerarActionPerformed(evt);
            }
        });

        botImprimir.setText("Imprimir");

        botSalir.setText("Salir");
        botSalir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                botSalirActionPerformed(evt);
            }
        });

        btGuardar.setText("Guardar");
        btGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btGuardarActionPerformed(evt);
            }
        });

        btLeer.setText("Leer");
        btLeer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btLeerActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(botGenerar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(botImprimir, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btGuardar)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(btLeer, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 112, Short.MAX_VALUE)
                .addComponent(botSalir, javax.swing.GroupLayout.PREFERRED_SIZE, 79, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(botSalir, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(btLeer, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botGenerar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(btGuardar, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(botImprimir, javax.swing.GroupLayout.DEFAULT_SIZE, 33, Short.MAX_VALUE))
                .addContainerGap())
        );

        jLabel11.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel11.setText("Curp Generada");

        txtCURPGen.setFont(new java.awt.Font("Tahoma", 0, 15)); // NOI18N
        txtCURPGen.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtCURPGen.setEnabled(false);

        javax.swing.GroupLayout PanelPrincipalLayout = new javax.swing.GroupLayout(PanelPrincipal);
        PanelPrincipal.setLayout(PanelPrincipalLayout);
        PanelPrincipalLayout.setHorizontalGroup(
            PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPrincipalLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(PanelPrincipalLayout.createSequentialGroup()
                        .addGroup(PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtCURPGen, javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addContainerGap())
                    .addGroup(PanelPrincipalLayout.createSequentialGroup()
                        .addGroup(PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(PanelPrincipalLayout.createSequentialGroup()
                                .addGap(20, 20, 20)
                                .addComponent(jLabel7)
                                .addGap(67, 67, 67)
                                .addComponent(jLabel8)
                                .addGap(73, 73, 73)
                                .addComponent(jLabel9))
                            .addGroup(PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 187, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jLabel6)
                                .addComponent(jLabel5)
                                .addComponent(jLabel4)
                                .addComponent(jLabel3)
                                .addComponent(jLabel2)
                                .addGroup(PanelPrincipalLayout.createSequentialGroup()
                                    .addGroup(PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(jLabel10)
                                        .addComponent(cBoxD, javax.swing.GroupLayout.PREFERRED_SIZE, 58, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                    .addGroup(PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(cBoxS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addGroup(PanelPrincipalLayout.createSequentialGroup()
                                            .addComponent(cBoxM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addGap(18, 18, 18)
                                            .addComponent(cBoxA, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE))))
                                .addComponent(txtNombres)
                                .addComponent(txtApellidoP)
                                .addComponent(txtApellidoM)
                                .addComponent(cBoxE, 0, 395, Short.MAX_VALUE)))
                        .addGap(0, 0, Short.MAX_VALUE))))
        );
        PanelPrincipalLayout.setVerticalGroup(
            PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(PanelPrincipalLayout.createSequentialGroup()
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtNombres, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtApellidoP, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtApellidoM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cBoxE, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel6)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7)
                    .addComponent(jLabel8)
                    .addComponent(jLabel9))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cBoxD, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cBoxM, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cBoxA, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(PanelPrincipalLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel10)
                    .addComponent(cBoxS, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(26, 26, 26)
                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtCURPGen, javax.swing.GroupLayout.PREFERRED_SIZE, 37, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        Menu1.setToolTipText("Menu");

        jMenu2.setText("Archivo");

        jMenuItem2.setText("Generar CURP");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        MenuLimpiar.setText("Limpiar");
        MenuLimpiar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                MenuLimpiarActionPerformed(evt);
            }
        });
        jMenu2.add(MenuLimpiar);

        Tabla.setText("Tabla");
        Tabla.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TablaActionPerformed(evt);
            }
        });
        jMenu2.add(Tabla);

        jMenuItem1.setText("Salir");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem1);

        Menu1.add(jMenu2);

        MenuEditar.setText("Editar");

        menuCopiarTexti.setText("Copiar CURP");
        menuCopiarTexti.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                menuCopiarTextiActionPerformed(evt);
            }
        });
        MenuEditar.add(menuCopiarTexti);

        Menu1.add(MenuEditar);

        jMenu1.setText("Ayuda");

        jMenuItem3.setText("Acerca de");
        jMenuItem3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem3ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem3);

        Menu1.add(jMenu1);

        setJMenuBar(Menu1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(PanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(PanelTitulo, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(PanelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(PanelPrincipal, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void botSalirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botSalirActionPerformed
        // TODO add your handling code here:
        salir();
    }//GEN-LAST:event_botSalirActionPerformed

    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed

        salir();
    }//GEN-LAST:event_jMenuItem1ActionPerformed
    private String CURP = "";
    private void cBoxMActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cBoxMActionPerformed
        // TODO add your handling code here:
        int M[] = {0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31};
        int mes = cBoxM.getSelectedIndex();
        if ((String) cBoxA.getSelectedItem() != "Año") {
            cBoxD.removeAllItems();
            for (int i = 1; i <= M[mes]; i++) {
                cBoxD.addItem(i);
            }
            if ((String) cBoxA.getSelectedItem() != "Año") {
                if (cBoxM.getSelectedIndex() == 2 && Integer.parseInt((String) cBoxA.getSelectedItem()) % 4 == 0) {
                    print("Paso");
                    cBoxD.addItem(29);
                }
            }
        } else {
            cBoxM.setSelectedIndex(0);
            showMessageDialog(null, "Error No hay año ingresado, ingrese un año.", "ERROR", ERROR_MESSAGE);
        }

    }//GEN-LAST:event_cBoxMActionPerformed
    boolean guardar = true;
    private void botGenerarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_botGenerarActionPerformed
        // TODO add your handling code here:
        if (txtNombres.getText().trim().equals("") || txtApellidoP.getText().trim().equals("") || txtApellidoM.getText().trim().equals("")) {
            showMessageDialog(null, "Ingrese Datos", "ERROR", ERROR_MESSAGE);
        } else {

            String Nombre, temp = "", ApellidoP, ApellidoM, EstadoF = "", Anio = "";
            int Estado = 0, Dia, Mes, Sexo;
            //  String Vocales ="AEIOU";
            String EsAbrevia[] = {"", "AG", "BC", "BS", "CM", "CS", "CH", "CO", "CL", "DF", "DG", "GT", "GR", "HG", "JC", "ME", "MN", "MS", "NT", "NL", "OC", "PL",
                "QO", "QR", "SP", "SL", "SR", "TC", "TS", "TL", "VZ", "YN", "ZS"};
            String Sexos[] = {"", "H", "M"};
            String pa = "", ma = "", nom = "";
            Nombre = ((String) txtNombres.getText()).toUpperCase().trim();
            nom = Nombre;
            Nombre = NombrePrincipal(Nombre);
            ApellidoP = (String) txtApellidoP.getText().toUpperCase().trim();
            pa = ApellidoP;
            ApellidoP = ApellidoPaterno(ApellidoP);
            ApellidoM = (String) txtApellidoM.getText().toUpperCase().trim();
            ma = ApellidoM;
            ApellidoM = ApellidoMaterno(ApellidoM);
            Estado = (Integer) cBoxE.getSelectedIndex();
            // EstadoF = EsAbrevia[Estado - 1];
            Dia = (Integer) cBoxD.getSelectedIndex() + 1;
            String tempd = "";
            if (Dia < 10) {
                tempd = "0" + Dia;
            } else {
                tempd = "" + Dia;
            }
            String TempMes = "";
            Mes = ((Integer) cBoxM.getSelectedIndex());
            if (Mes < 10) {
                TempMes = "0" + Mes;
            } else {
                TempMes = "" + Mes;
            }
            //    print(((String) cBoxA.getSelectedItem()).substring(2));
            Anio = (((String) cBoxA.getSelectedItem()).substring(2));
            Sexo = ((Integer) cBoxS.getSelectedIndex());
            CURP = "" + ApellidoP + "" + ApellidoM + "" + Nombre + "" + Anio + "" + TempMes + "" + tempd + "" + Sexos[Sexo] + "" + EsAbrevia[Estado] + "" + PrimerLetraApellidoInterno(pa) + PrimerLetraApellidoInterno(ma) + PrimerLetraApellidoInterno(nom) + "" + GenerarHomoclave() + "" + GenerarDigitoVerificador() + "";
            if ((CURP.substring(0, CURP.length() - 3)).equals(verificar(CURP))) {
                txtCURPGen.setText("La curp de la persona indicada ya fe generada.");
                guardar = false;
            } else {
                txtCURPGen.setText("" + CURP);
                guardar = true;
            }

        }
    }//GEN-LAST:event_botGenerarActionPerformed

    private void MenuLimpiarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_MenuLimpiarActionPerformed
        // TODO add your handling code here:
        limpiar();
    }//GEN-LAST:event_MenuLimpiarActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        // TODO add your handling code here:
        Generador();
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void jMenuItem3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem3ActionPerformed
        // TODO add your handling code here:
        FerAnimaciones a = new FerAnimaciones();
        a.Acerca();
    }//GEN-LAST:event_jMenuItem3ActionPerformed

    private void btGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btGuardarActionPerformed
        // TODO add your handling code here:
        if (txtCURPGen.getText().equals("") || guardar == false) {
            showMessageDialog(null, "No hay CURP para guardar, genere una.", "ERROR", ERROR_MESSAGE);
        } else {

            /*  try {
             java.io.RandomAccessFile fos = new java.io.RandomAccessFile("CURP.BIN", "rw");
             fos.seek(fos.length());
             fos.writeUTF(txtCURPGen.getText());
             fos.close();
             javax.swing.JOptionPane.showMessageDialog(rootPane, "Archivo guradado");
             } catch (java.io.IOException e) {
             javax.swing.JOptionPane.showMessageDialog(rootPane, "ERROR");
             }*/
            try {
                java.io.FileOutputStream fos = new java.io.FileOutputStream("CURP2.BIN", true);
                fos.write((" " + txtCURPGen.getText() + " \n").getBytes());
                fos.flush();
                fos.close();
                Icon icono = new ImageIcon("src/Imagenes/Guardado.png");
                showMessageDialog(null, "Archivo guradado", "Archivo guradado", PLAIN_MESSAGE, icono);
                //   javax.swing.JOptionPane.showMessageDialog(rootPane, "Archivo guradado");
                guardar=false;
            } catch (java.io.IOException e) {
                guardar=false; 
                showMessageDialog(null, "Ingrese Datos", "ERROR", ERROR_MESSAGE);

            }
        }
    }//GEN-LAST:event_btGuardarActionPerformed

    public void leer2() {
        String temp = "";
        try {
            //   java.io.FileOutputStream fos = new java.io.FileOutputStream("CURP2.BIN", true);
            java.io.FileInputStream fos = new java.io.FileInputStream("CURP2.BIN");

            byte c[] = new byte[17];
            fos.read(c);
            //      txtCURPGen.setText("" + fos.read());
            int content;
            while ((content = fos.read()) != -1) {
                System.out.print((char) content);
                temp = temp + "" + (char) content;
            }
            txtCURPGen.setText("" + temp);
        } catch (java.io.IOException e) {
            javax.swing.JOptionPane.showMessageDialog(rootPane, "ERROR");
        }
    }
    String Leer[];
    int pos = 0;
    private void btLeerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btLeerActionPerformed
        // TODO add your handling code here:
        AbrirArchivo2();
        guardar=false;
        if (Leer.length != pos) {
            txtCURPGen.setText("" + Leer[pos].trim());
            pos++;
        }

    }//GEN-LAST:event_btLeerActionPerformed

    private void menuCopiarTextiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_menuCopiarTextiActionPerformed
        // TODO add your handling code here:
        String cop = (String) txtCURPGen.getText();
        StringSelection stringSelection = new StringSelection(cop);
        Clipboard clpbrd = Toolkit.getDefaultToolkit().getSystemClipboard();
        clpbrd.setContents(stringSelection, null);
    }//GEN-LAST:event_menuCopiarTextiActionPerformed

    private void TablaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TablaActionPerformed
        // TODO add your handling code here:
        new Ventana().setVisible(true);
    }//GEN-LAST:event_TablaActionPerformed
    public void salir() {
        System.exit(0);
    }

    public void AbrirArchivo() {
        String temp = "";
        try {
            //   java.io.FileOutputStream fos = new java.io.FileOutputStream("CURP2.BIN", true);
            java.io.FileInputStream fos = new java.io.FileInputStream("CURP2.BIN");
            fos.read();
            //      txtCURPGen.setText("" + fos.read());
            int content;
            while ((content = fos.read()) != -1) {
                System.out.print((char) content);
                temp = temp + "" + (char) content;
            }
            txtCURPGen.setText("" + temp);
        } catch (java.io.IOException e) {
            javax.swing.JOptionPane.showMessageDialog(rootPane, "ERROR");
        }
    }

    public void AbrirArchivo2() {
        try {

            java.io.FileInputStream fos = new java.io.FileInputStream("CURP2.BIN");
            java.io.BufferedReader reader = new java.io.BufferedReader(new java.io.InputStreamReader(fos));
            fos.read();
            String line = reader.readLine();
            String temp = "";
            int a = 0;
            while (line != null) {
                a++;
                line = reader.readLine();

            }
            Leer = new String[a];
            java.io.FileInputStream fos2 = new java.io.FileInputStream("CURP2.BIN");
            java.io.BufferedReader reader2 = new java.io.BufferedReader(new java.io.InputStreamReader(fos2));
            String line2 = reader2.readLine();
            int i = 0;
            while (line2 != null) {
                System.out.println("Lineas: " + line2);
                temp = "" + line2;
                Leer[i] = temp;
                i++;
                line2 = reader2.readLine();
                temp = "";

            }
            fos.close();
        } catch (java.io.IOException e) {
            javax.swing.JOptionPane.showMessageDialog(rootPane, "ERROR NO SE ENCONTRO EL ARCHIVO ", "ERROR", 0);
        }

    }

    public String ApellidoPaterno(String a) {
        String temp = "";
        temp = a.substring(0, 1);
        a = a.substring(1, a.length());
        char nombre[] = a.toCharArray();
        char vocales[] = {'A', 'E', 'I', 'O', 'U'};
        boolean encontrada = false;
        for (int i = 0; i < nombre.length; i++) {
            for (int j = 0; j < vocales.length; j++) {
                if (nombre[i] == vocales[j]) {
                    encontrada = true;
                    temp = "" + temp + "" + nombre[i];
                    // print(temp);
                    break;
                }
            }
            if (encontrada) {
                break;
            }
        }
        return temp;
    }

    public String PrimerLetraApellidoInterno(String a) {

        String temp = "";
        temp = a.substring(0, 1);
        a = a.substring(1, a.length());
        char nombre[] = a.toCharArray();
        char vocales[] = {'B', 'C', 'D', 'F', 'G', 'H', 'J', 'K', 'L', 'M', 'N', 'P', 'Q', 'R', 'S', 'T', 'V', 'W', 'X', 'Y', 'Z'};
        boolean encontrada = false;
        for (int i = 0; i < nombre.length; i++) {
            for (int j = 0; j < vocales.length; j++) {
                if (nombre[i] == vocales[j]) {
                    encontrada = true;
                    temp = "" + "" + "" + nombre[i];
                    //  print(temp);
                    break;
                }
            }
            if (encontrada) {
                break;
            }
        }
        return temp;

    }

    public String ApellidoMaterno(String a) {
        String temp1;
        temp1 = a.substring(0, 1);
        // print("Funciona");
        return temp1;
    }

    public String NombrePrincipal(String a) {
        String temp1;
        temp1 = a.substring(0, 1);
        // print("Funciona");
        return temp1;
    }

    public String GenerarHomoclave() {
        String[] abecedario = {"A", "B", "C", "D", "E", "F", "G", "H", "I", "J",
            "K", "L", "M", "N", "O", "P", "Q", "R", "S", "T", "U", "V", "W", "X", "Y", "Z"};

        int numRandon = (int) Math.round(Math.random() * 25);
        return ("" + abecedario[numRandon]);
    }

    public String GenerarDigitoVerificador() {
        int numNum = 0;
        try {
            java.io.FileInputStream fos = new java.io.FileInputStream("CURP2.BIN");
            java.io.BufferedReader reader = new java.io.BufferedReader(new java.io.InputStreamReader(fos));
            String temporal = "";
            try {
                fos.read();
                String line = reader.readLine();
                String temp = "";
                while (line != null) {

                    //  System.out.println(line);
                    temp = "" + line;
                    //   print("" + temp.trim());
                    temporal = temp.trim();
                    line = reader.readLine();
                    temp = "";

                }
                //print("La Ultima " + temporal);
                numNum = Integer.parseInt(temporal.substring(temporal.length() - 2, temporal.length())) + 1;
                fos.close();
            } catch (java.io.IOException e) {
            }
        } catch (java.io.FileNotFoundException e) {
            numNum = 0;
        }

        //int numRandon = (int) Math.round(Math.random() * 10);
        if (numNum < 10) {
            return ("0" + numNum);
        } else {
            return ("" + numNum);
        }

    }

    public void Generador() {
        if (txtNombres.getText().trim().equals("") || txtApellidoP.getText().trim().equals("") || txtApellidoM.getText().trim().equals("")) {
            showMessageDialog(null, "Ingrese Datos", "ERROR", ERROR_MESSAGE);
        } else {

            String Nombre, temp = "", ApellidoP, ApellidoM, EstadoF = "", Anio = "";
            int Estado = 0, Dia, Mes, Sexo;
            //  String Vocales ="AEIOU";
            String EsAbrevia[] = {"", "AG", "BC", "BS", "CM", "CS", "CH", "CO", "CL", "DF", "DG", "GT", "GR", "HG", "JC", "ME", "MN", "MS", "NT", "NL", "OC", "PL",
                "QO", "QR", "SP", "SL", "SR", "TC", "TS", "TL", "VZ", "YN", "ZS"};
            String Sexos[] = {"", "H", "M"};
            String pa = "", ma = "", nom = "";
            Nombre = ((String) txtNombres.getText()).toUpperCase().trim();
            nom = Nombre;
            Nombre = NombrePrincipal(Nombre);
            ApellidoP = (String) txtApellidoP.getText().toUpperCase().trim();
            pa = ApellidoP;
            ApellidoP = ApellidoPaterno(ApellidoP);
            ApellidoM = (String) txtApellidoM.getText().toUpperCase().trim();
            ma = ApellidoM;
            ApellidoM = ApellidoMaterno(ApellidoM);
            Estado = (Integer) cBoxE.getSelectedIndex();
            // EstadoF = EsAbrevia[Estado - 1];
            Dia = (Integer) cBoxD.getSelectedIndex() + 1;
            String tempd = "";
            if (Dia < 10) {
                tempd = "0" + Dia;
            } else {
                tempd = "" + Dia;
            }
            String TempMes = "";
            Mes = ((Integer) cBoxM.getSelectedIndex());
            if (Mes < 10) {
                TempMes = "0" + Mes;
            } else {
                TempMes = "" + Mes;
            }
            //    print(((String) cBoxA.getSelectedItem()).substring(2));
            Anio = (((String) cBoxA.getSelectedItem()).substring(2));
            Sexo = ((Integer) cBoxS.getSelectedIndex());
            CURP = "" + ApellidoP + "" + ApellidoM + "" + Nombre + "" + Anio + "" + TempMes + "" + tempd + "" + Sexos[Sexo] + "" + EsAbrevia[Estado] + "" + PrimerLetraApellidoInterno(pa) + PrimerLetraApellidoInterno(ma) + PrimerLetraApellidoInterno(nom) + "" + GenerarHomoclave() + "" + GenerarDigitoVerificador() + "";
            txtCURPGen.setText("" + CURP);
        }
    }
    /* public int revisador() {
     int n = 0;
     if ((String) txtNombres.getText() == "") {
     n = 1;
     }
     if ((String) txtNombres.getText() == "") {
     n = 1;
     }
     if ((String) txtNombres.getText() == "") {
     n = 1;
     }
     if ((String) txtNombres.getText() == "") {
     n = 1;
     }
     return n;
     }*/

    public void limpiar() {
        txtCURPGen.setText("");
        txtNombres.setText("");
        txtApellidoP.setText("");
        txtApellidoM.setText("");
    }

    public void print(String a) {
        System.out.println("" + a);
    }

    @Override
    public Image getIconImage() {
        Image retValue = Toolkit.getDefaultToolkit().
                getImage(ClassLoader.getSystemResource("Imagenes/IconoCURP.png"));

        return retValue;
    }

    public String verificar(String curp) {
        String fin = "";
        curp = curp.substring(0, curp.length() - 3);
        String curps[];
        try {
            java.io.FileInputStream fos = new java.io.FileInputStream("CURP2.BIN");
            java.io.FileInputStream fos2 = new java.io.FileInputStream("CURP2.BIN");
            try {
                java.io.BufferedReader reader = new java.io.BufferedReader(new java.io.InputStreamReader(fos));
                fos.read();
                fos2.read();
                int contador = 0;
                String line = reader.readLine();
                String line2 = line;
                //print("Linea 1 "+ line);
                while (line != null) {
                    line = reader.readLine();
                    contador++;
                    // print(""+contador);
                }
                fos.close();

                curps = new String[contador];
                String temp = "";
                line = "";
                java.io.BufferedReader reader2 = new java.io.BufferedReader(new java.io.InputStreamReader(fos2));
                line = reader2.readLine();
                //   print("CURPS eo eoeoe   " + contador + "  " + line);
                int c = 0;
                while (line2 != null) {
                    System.out.println(line);
                    temp = "" + line2;
                    temp = temp.trim();
                    curps[c] = temp.substring(0, temp.length() - 3);
                    line2 = reader2.readLine();
                    c++;
                    temp = "";
                }
                for (int i = 0; i < c; i++) {
                    print("CURPS " + i + " " + curps[i]);
                    if (curps[i].equals(curp)) {
                        fin = curps[i];
                        break;
                    }
                }
                print("CURPS eo eoeoe " + c + "  " + contador);
                fos.close();
                fos2.close();

            } catch (java.io.IOException e) {
                //     javax.swing.JOptionPane.showMessageDialog(rootPane, "ERROR NO SE ENCONTRO EL ARCHIVO ", "ERROR", 0);
                fin = "";
            }
        } catch (java.io.FileNotFoundException e) {
            //   javax.swing.JOptionPane.showMessageDialog(rootPane, "ERROR NO SE ENCONTRO EL ARCHIVO ", "ERROR", 0);
            fin = "";
        }

        return fin;
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VentanaCURP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VentanaCURP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VentanaCURP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VentanaCURP.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {

                new VentanaCURP().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuBar Menu1;
    private javax.swing.JMenu MenuEditar;
    private javax.swing.JMenuItem MenuLimpiar;
    private javax.swing.JPanel PanelPrincipal;
    private javax.swing.JPanel PanelTitulo;
    private javax.swing.JMenuItem Tabla;
    private javax.swing.JButton botGenerar;
    private javax.swing.JButton botImprimir;
    private javax.swing.JButton botSalir;
    private javax.swing.JButton btGuardar;
    private javax.swing.JButton btLeer;
    private javax.swing.JComboBox cBoxA;
    private javax.swing.JComboBox cBoxD;
    private javax.swing.JComboBox cBoxE;
    private javax.swing.JComboBox cBoxM;
    private javax.swing.JComboBox cBoxS;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JMenuItem jMenuItem3;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JMenuItem menuCopiarTexti;
    private javax.swing.JTextField txtApellidoM;
    private javax.swing.JTextField txtApellidoP;
    private javax.swing.JTextField txtCURPGen;
    private javax.swing.JTextField txtNombres;
    // End of variables declaration//GEN-END:variables
}
